
import java.util.Scanner;

public class TestFraction {
    public static void main(String[] args) {
        Fraction<Integer> fraction =new Fraction(2,3);
        Fraction<Double> f1 = new Fraction(4.0,5.0);
    }
  
    /*public static double computeValue(Fraction[][] fractions, int N) {
        double ans = 0.0;
         Calculate the value of the Determinant of the matrix (using multiplication of Fractions, after getting the value of each fraction using getValue()) Here and return it to the main function 
        if(N == 1)
        {
            ans = fractions[0][0].getValue();
        }
        else if (N == 2)
        {
            ans = fractions[0][0].getValue()*fractions[1][1].getValue() - fractions[1][0].getValue()*fractions[0][1].getValue();
        }
        else
        {
            ans=0.0;
            for(int j1=0;j1<N;j1++)
            {
                Fraction[][] m = new Fraction[N-1][];
                for(int k=0;k<(N-1);k++)
                {
                    m[k] = new Fraction[N-1];
                }
                for(int i=1;i<N;i++)
                {
                    int j2=0;
                    for(int j=0;j<N;j++)
                    {
                        if(j == j1)
                            continue;
                        m[i-1][j2] = fractions[i][j];
                        j2++;
                    }
                }
                ans += Math.pow(-1.0,1.0+j1+1.0)* fractions[0][j1].getValue() * computeValue(m,N-1);
            }
        }
        return ans;
    }
}*/